apply plugin: 'com.android.application'
apply plugin: 'AndResGuard'

android {

    compileSdkVersion gradle.apiVersion
    buildToolsVersion gradle.toolsVersion

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        applicationId "com.blink.browser"
        minSdkVersion 16
        targetSdkVersion 21

        versionCode gradle.versionCode
        versionName gradle.versionName
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //是否zip对齐
            zipAlignEnabled true
            //移除没用的资源
            shrinkResources true
            buildConfigField("Boolean", "DEBUG_MODE", "false");
//            signingConfig signingConfigs.signConfig
            resValue "string", "channel", "00000000"

        }

        debug {
            minifyEnabled false
//            signingConfig signingConfigs.signConfig
            buildConfigField("Boolean", "DEBUG_MODE", "true");
            resValue "string", "channel", "00000000"
        }
    }

    productFlavors {
        blink {
            applicationId "com.blink.browser"
            //versionCode gradle.versionCode
            //versionName gradle.versionName
            manifestPlaceholders = [BROWSER_NAME: "blinkbrowser", PACKAGE_NAME: "com.blink.browser"]
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    dependencies {
        compile project(":wink")
        compile 'com.android.support:cardview-v7:23.1.1'
        compile 'com.android.support:recyclerview-v7:23.1.1'
        compile 'com.android.support:palette-v7:23.1.1'
        compile 'com.squareup.okhttp:okhttp-android-support:2.5.0'
        compile 'com.umeng.analytics:analytics:latest.integration'
        compile 'com.tcl.framework:tcl-framework:latest.release'
        compile(name: 'recyclerview-swipe', ext: 'aar');
    }
}

andResGuard {
    mappingFile = null
    //uss7zip为true时，useSign必须为true；
    use7zip = true
    //useSign为true时，需要配置signConfig；
    useSign = true
    //打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字;
    keepRoot = false
    whiteList = [
            "R.drawable.icon",
    ]
    //用来指定文件重打包时是否压缩指定文件;
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    //sevenzip可使用artifacr或path，path指本地安装的7za（7zip命令行工具）。
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.0'
    }
}
